generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  password      String?
  username      String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  page          Page?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Page {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  bio       String?
  avatarUrl String?

  links   Link[]   @relation("PageLinks")
  socials Social[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Link {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  url    String
  title  String?
  pageId String  @db.ObjectId
  page   Page    @relation("PageLinks", fields: [pageId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Social {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  platform String
  url      String
  pageId   String @db.ObjectId
  page     Page   @relation(fields: [pageId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
